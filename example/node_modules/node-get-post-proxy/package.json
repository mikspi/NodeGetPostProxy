{
  "name": "node-get-post-proxy",
  "version": "0.0.1",
  "description": "An http proxy - the first one who works with both GET and POST requests",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "http",
    "proxy",
    "post"
  ],
  "author": {
    "name": "Michele Spina"
  },
  "license": "ISC",
  "dependencies": {
    "require": "x"
  },
  "readme": "#NodeGetPostProxy\n\n### When to use NodeGetPostProxy\n\nYou have a front-end application which always connect to an IP address and you have multiple server instances:\n- production: the higher percentage of users connect to it\n- development: you want to connect to it to test new features (but you cannot modify the frontend because it is mantained by another team)\n- staging: you want that a sample of the users connect to it in order to do an A/B testing\n\nYour application has a login. You want to decide to which server a user connect basing on its username.\n\nThe solution with this module is to let the production server to act as a Proxy. If the user who does the request has to connect to the staging server, because its field \"server\" in the database is set to \"staging\", the production server does the request for him (with the get or post fields) and it will return the response.\n\nThe module automatically understand if the request was a GET or a POST and forward the GET or POST fields.\n\n\n### Installing NodeGetPostProxy\n\n```\nnpm install nodegetpostproxy\n```\n\n### How to use it\n\n```\nvar express = require('express');\nvar app = express();\nvar http = require('http');\nvar httpProxy = require('NodeGetPostProxy');\n\n\nvar proxy = httpProxy.createProxyServer({\n  target: \"http://....\"\n});\n\n\napp.use(function(req,res,next){\n    if (req.user == 'staging'){\n      proxy.web(req,res);\n    } else {\n      return next();\n    }\n});\n\nhttp.createServer(app).listen(80);\nconsole.log('Listening on port 80...');\n\n```",
  "readmeFilename": "README.md",
  "_id": "node-get-post-proxy@0.0.1",
  "_shasum": "7d6c1dfd255cd3a9143f99a01d201d896aa77a4e",
  "_from": "node-get-post-proxy@"
}
